# 502エラー防止用最適化nginx設定
# アップストリーム定義（ヘルスチェック付き）

upstream budget2_backend {
    # keepaliveでコネクション再利用
    keepalive 32;
    
    # プライマリサーバー
    server 127.0.0.1:3002 max_fails=2 fail_timeout=10s;
    
    # バックアップ（同じサーバーだが異なるアドレス）
    server 127.0.1.1:3002 backup max_fails=2 fail_timeout=10s;
}

# IPアクセス用設定（HTTP）
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # ルートアクセスを/budget2/にリダイレクト
    location = / {
        return 301 /budget2/;
    }

    # 予算管理v2 プロキシ設定
    location /budget2/ {
        # アップストリームを使用
        proxy_pass http://budget2_backend/budget2/;
        
        # ヘッダー設定
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocketサポート
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # タイムアウト設定（増加）
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # バッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # エラー処理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
        
        # カスタムエラーページ
        proxy_intercept_errors on;
        error_page 502 503 504 /502.html;
    }
    
    # 予算管理v2 トップページ（末尾スラッシュなし）
    location = /budget2 {
        return 301 /budget2/;
    }

    # 静的ファイル配信（キャッシュ付き）
    location ~ ^/budget2/(_app|@fs|@vite|.svelte-kit)/ {
        proxy_pass http://budget2_backend;
        proxy_set_header Host $host;
        
        # キャッシュ設定
        proxy_cache_valid 200 365d;
        expires 365d;
        add_header Cache-Control "public, immutable";
    }

    # カスタム502エラーページ
    location = /502.html {
        root /home/tanaka/projects/nagaiku-budget-v2;
        internal;
        
        # デフォルトの502ページを提供
        default_type text/html;
        return 502 '<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>一時的にアクセスできません</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: #f5f5f5;
        }
        .container {
            text-align: center;
            padding: 2rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            max-width: 500px;
        }
        h1 { color: #333; margin-bottom: 1rem; }
        p { color: #666; margin-bottom: 1.5rem; }
        .retry-btn {
            background: #007bff;
            color: white;
            padding: 0.75rem 2rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
        }
        .retry-btn:hover { background: #0056b3; }
        .status { 
            margin-top: 1rem;
            padding: 0.5rem;
            background: #fff3cd;
            border: 1px solid #ffc107;
            border-radius: 4px;
            color: #856404;
        }
    </style>
    <script>
        // 自動リトライ（10秒後）
        setTimeout(function() {
            window.location.reload();
        }, 10000);
    </script>
</head>
<body>
    <div class="container">
        <h1>一時的にアクセスできません</h1>
        <p>サーバーが一時的に利用できない状態です。<br>10秒後に自動的に再試行されます。</p>
        <a href="javascript:location.reload()" class="retry-btn">今すぐ再試行</a>
        <div class="status">
            システムは自動復旧中です。<br>
            しばらくお待ちください。
        </div>
    </div>
</body>
</html>';
    }

    # ヘルスチェックエンドポイント
    location = /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # ログ設定
    access_log /var/log/nginx/budget2-access.log;
    error_log /var/log/nginx/budget2-error.log warn;

    # セキュリティヘッダー
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # ファイルアップロードサイズ
    client_max_body_size 20M;
    
    # バッファサイズ
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
}

# nagaiku.topドメイン用設定（HTTPS）
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name nagaiku.top www.nagaiku.top;

    # SSL証明書設定
    ssl_certificate /etc/letsencrypt/live/www.nagaiku.top/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.nagaiku.top/privkey.pem;
    
    # SSL最適化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 予算管理v2 プロキシ設定（HTTPSでもHTTPバックエンドを使用）
    location /budget2/ {
        # HTTPバックエンドを使用（HTTPSではない）
        proxy_pass http://budget2_backend/budget2/;
        
        # ヘッダー設定
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocketサポート
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # タイムアウト設定
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # エラー処理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
        
        # カスタムエラーページ
        proxy_intercept_errors on;
        error_page 502 503 504 /502.html;
    }
    
    # その他の設定は上記と同じ
    location = /budget2 {
        return 301 https://$host/budget2/;
    }

    # カスタム502エラーページ（HTTPS用）
    location = /502.html {
        root /home/tanaka/projects/nagaiku-budget-v2;
        internal;
    }

    # ログ設定
    access_log /var/log/nginx/nagaiku-ssl-access.log;
    error_log /var/log/nginx/nagaiku-ssl-error.log warn;

    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    client_max_body_size 20M;
}

# HTTPからHTTPSへのリダイレクト（nagaiku.top用）
server {
    listen 80;
    listen [::]:80;
    server_name nagaiku.top www.nagaiku.top;
    
    return 301 https://$server_name$request_uri;
}